Full manifest should match snapshot:
  1: |
    apiVersion: v1
    data:
      root.key1: value1
      root.key2: value2
    kind: ConfigMap
    metadata:
      name: frontend1
      namespace: NAMESPACE
  2: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        key1: value1
        key2: value2
      name: frontend1
      namespace: NAMESPACE
    spec:
      replicas: 3
      selector:
        matchLabels:
          app: frontend1
      template:
        metadata:
          annotations:
            apparmor.security.beta.kubernetes.io/pod: runtime/default
            checksum: chart-version=2.0.9_config-hash=173b694faf673627dfca3f5aee426083050ddba18c23f315488b2a1c3f325105
            no.dsb-norge.filebeat/autodiscover-template: nginx
          labels:
            app: frontend1
        spec:
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - frontend1
                topologyKey: kubernetes.io/hostname
          containers:
          - envFrom:
            - secretRef:
                name: secret1
            - configMapRef:
                name: configMap1
            - configMapRef:
                name: frontend1
            image: wordpress:greatest
            livenessProbe:
              httpGet:
                path: /
                port: 80
              initialDelaySeconds: 5
            name: frontend1
            ports:
            - containerPort: 80
              name: web
            readinessProbe:
              httpGet:
                path: /
                port: 80
              initialDelaySeconds: 2
            resources:
              limits:
                cpu: 1
                memory: 19Mi
              requests:
                cpu: 0.3
                memory: 4Mi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              privileged: false
              readOnlyRootFilesystem: false
              runAsGroup: 101
              runAsUser: 101
            volumeMounts:
            - mountPath: /etc/nginx/templates/example-cache.conf.template
              name: templateoverrides
              subPath: example-cache.conf.template
            - mountPath: /etc/nginx/templates/example-locations.conf.template
              name: templateoverrides
              subPath: example-locations.conf.template
            - mountPath: /etc/nginx/templates/example-server.conf.template
              name: templateoverrides
              subPath: example-server.conf.template
          nodeSelector:
            NodePool: workers
          volumes:
          - configMap:
              items:
              - key: example-cache.conf.template
                path: example-cache.conf.template
              - key: example-locations.conf.template
                path: example-locations.conf.template
              - key: example-server.conf.template
                path: example-server.conf.template
              name: frontend1-template-overrides
            name: templateoverrides
  3: |
    apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      name: frontend1
      namespace: NAMESPACE
    spec:
      rules:
      - host: example.com
        http:
          paths:
          - backend:
              service:
                name: frontend1
                port:
                  number: 80
            path: /example
            pathType: Prefix
  4: |
    apiVersion: policy/v1
    kind: PodDisruptionBudget
    metadata:
      name: frontend1
    spec:
      minAvailable: 1
      selector:
        matchLabels:
          app: frontend1
  5: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        chart-name: dsb-nginx-frontend
        chart-version: 2.0.9
      name: frontend1
      namespace: NAMESPACE
    spec:
      ports:
      - name: web
        port: 80
      selector:
        app: frontend1
  6: |
    apiVersion: v1
    data:
      example-cache.conf.template: |-
        proxy_cache_path /tmp/example_cache levels=1:2 keys_zone=example_cache:10m inactive=60m use_temp_path=off;
        proxy_cache_key "$scheme$request_method$host$request_uri";
        proxy_cache_methods GET HEAD;
        proxy_cache_valid 200 10m;
        proxy_cache_use_stale updating;
        proxy_cache_background_update on;
        proxy_cache example_cache;
      example-locations.conf.template: |-
        location ~* \.(css|js)$ {
          expires 30d;
        }

        location /api/upload/stuff {
          client_max_body_size 200M;
          proxy_ssl_server_name on;
          proxy_pass ${LOC_API_PROXY_PASS_HOST};
        }
      example-server.conf.template: |-
        gzip on;
        gzip_comp_level 5;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_proxied any;
    kind: ConfigMap
    metadata:
      name: frontend1-template-overrides
      namespace: NAMESPACE
Minimal manifest should match snapshot:
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: frontend
      namespace: NAMESPACE
    spec:
      replicas: 2
      selector:
        matchLabels:
          app: frontend
      template:
        metadata:
          annotations:
            apparmor.security.beta.kubernetes.io/pod: runtime/default
            checksum: chart-version=2.0.9_config-hash=0ada92897fbbb5244d559ea2e905df450cf44e4682c6ac9d6af583886d161a05
            no.dsb-norge.filebeat/autodiscover-template: nginx
          labels:
            app: frontend
        spec:
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - frontend
                topologyKey: kubernetes.io/hostname
          containers:
          - envFrom: null
            image: nginx:latest
            livenessProbe:
              httpGet:
                path: /
                port: 8080
              initialDelaySeconds: 5
            name: frontend
            ports:
            - containerPort: 8080
              name: web
            readinessProbe:
              httpGet:
                path: /
                port: 8080
              initialDelaySeconds: 2
            resources:
              limits:
                cpu: 100m
                memory: 256Mi
              requests:
                cpu: 50m
                memory: 128Mi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              privileged: false
              readOnlyRootFilesystem: false
              runAsGroup: 101
              runAsUser: 101
          nodeSelector:
            NodePool: workers
  2: |
    apiVersion: policy/v1
    kind: PodDisruptionBudget
    metadata:
      name: frontend
    spec:
      minAvailable: 1
      selector:
        matchLabels:
          app: frontend
  3: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        chart-name: dsb-nginx-frontend
        chart-version: 2.0.9
      name: frontend
      namespace: NAMESPACE
    spec:
      ports:
      - name: web
        port: 8080
      selector:
        app: frontend
should render default with PodDisruptionBudget and should match snapshot:
  1: |
    apiVersion: policy/v1
    kind: PodDisruptionBudget
    metadata:
      name: frontend
    spec:
      minAvailable: 1
      selector:
        matchLabels:
          app: frontend
